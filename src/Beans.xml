<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- <bean id="helloWorld" class="com.sfy.HelloWorld"> <property name="message" 
		value="Hello World!"/> </bean> -->

	<!-- bean作用域 scope -->
	<!-- <bean id="helloWorld" class="com.sfy.HelloWorld" scope="property"> 
		<property name="message" value="Hello World!"/> </bean> -->

	<!-- 后置处理器 -->
	<!-- <bean id="helloWorld" class="com.sfy.HelloWorld" init-method="init" 
		destroy-method="destroy"> <property name="message" value="Hello World!" /> 
		</bean> <bean class="com.sfy.InitHelloWorld" /> -->

	<!-- 继承 -->
	<!-- <bean id="helloWorld" class="com.sfy.HelloWorld"> <property name="message1" 
		value="Hello World!" /> <property name="message2" value="Hello Second World!" 
		/> </bean> <bean id="helloIndia" class="com.sfy.HelloIndia" parent="helloWorld"> 
		<property name="message1" value="Hello India!" /> <property name="message3" 
		value="Namaste India!" /> </bean> -->

	<!-- 父 bean 自身不能被实例化，因为它是不完整的，而且它也被明确地标记为抽象的。当一个定义是抽象的，它仅仅作为一个纯粹的模板 bean 
		定义来使用的，充当子定义的父定义使用 -->
	<bean id="beanTeamplate" abstract="true">
		<property name="message1" value="Hello World!" />
		<property name="message2" value="Hello Second World!" />
		<property name="message3" value="Namaste India!" />
	</bean>
	<bean id="helloIndia" class="com.sfy.HelloIndia" parent="beanTeamplate">
		<property name="message1" value="Hello India!" />
		<property name="message3" value="Namaste India!" />
	</bean>

	<!-- 构造函数的依赖注入 -->
	<!-- <bean id="textEditor" class="com.sfy.TextEditor"> <constructor-arg 
		ref="spellChecker" /> </bean> <bean id="spellChecker" class="com.sfy.SpellChecker"> 
		</bean> -->

	<!-- 通过设置依赖注入 -->
	<!-- <bean id="textEditor" class="com.sfy.TextEditor"> <property name="spellChecker" 
		ref="spellChecker" /> </bean> <bean id="spellChecker" class="com.sfy.SpellChecker"> 
		</bean> -->

	<!-- Definition for textEditor bean using inner bean -->
	<!-- <bean id="textEditor" class="com.sfy.TextEditor"> <property name="spellChecker"> 
		<bean id="spellChecker" class="com.sfy.SpellChecker" /> </property> </bean> -->


	<!-- Definition for javaCollection -->
	<bean id="javaCollection" class="com.sfy.JavaCollection">
		<!-- results in a setAddressList(java.util.List) call -->
		<property name="addressList">
			<list>
				<value>INDIA</value>
				<value>Pakistan</value>
				<value>USA</value>
				<value>USA</value>
			</list>
		</property>
		<!-- results in a setAddressSet(java.util.Set) call -->
		<property name="addressSet">
			<set>
				<value>INDIA</value>
				<value>Pakistan</value>
				<value>USA</value>
				<value>USA</value>
			</set>
		</property>
		<!-- results in a setAddressMap(java.util.Map) call -->
		<property name="addressMap">
			<map>
				<entry key="1" value="INDIA" />
				<entry key="2" value="Pakistan" />
				<entry key="3" value="USA" />
				<entry key="4" value="USA" />
			</map>
		</property>
		<!-- results in a setAddressProp(java.util.Properties) call -->
		<property name="addressProp">
			<props>
				<prop key="one">INDIA</prop>
				<prop key="two">Pakistan</prop>
				<prop key="three">USA</prop>
				<prop key="four">USA</prop>
			</props>
		</property>
	</bean>


	<!-- byName,byType -->
	<!-- <bean id="textEditor" class="com.sfy.TextEditor" autowire="byName"> 
		<property name="name" value="Generic Text Editor" /> </bean> <bean id="spellChecker" 
		class="com.sfy.SpellChecker"> </bean> -->
	<!-- <bean id="textEditor" class="com.sfy.TextEditor" autowire="byType"> 
		<property name="name" value="Generic Text Editor" /> </bean> <bean id="SpellChecker" 
		class="com.sfy.SpellChecker"> </bean> -->


	<!-- 构造函数的自动装配 -->
	<!-- 
		<bean id="textEditor" class="com.sfy.TextEditor"> 
			<constructor-arg ref="spellChecker" /> 
			<constructor-arg value="Generic Text Editor"/>
		</bean> 
		<bean id="spellChecker" class="com.sfy.SpellChecker"> </bean> -->

	<bean id="textEditor" class="com.sfy.TextEditor"
		autowire="constructor">
		<constructor-arg value="Generic Text Editor" />
	</bean>
	<bean id="SpellChecker" class="com.sfy.SpellChecker">
	</bean>


</beans>